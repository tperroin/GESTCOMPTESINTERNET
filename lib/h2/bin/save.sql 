;              
CREATE USER IF NOT EXISTS SA SALT '04c988d28a83dfcf' HASH '155a0f3286948e496d0df21e92e9d12b79354ca2b0fc2c512a5365ea1a6d830f' ADMIN;            
CREATE SCHEMA IF NOT EXISTS FT AUTHORIZATION SA;               
CREATE FORCE ALIAS PUBLIC.FT_REINDEX FOR "org.h2.fulltext.FullText.reindex";   
CREATE FORCE ALIAS PUBLIC.FT_DROP_ALL FOR "org.h2.fulltext.FullText.dropAll";  
CREATE FORCE ALIAS PUBLIC.FT_SEARCH FOR "org.h2.fulltext.FullText.search";     
CREATE FORCE ALIAS PUBLIC.FT_INIT FOR "org.h2.fulltext.FullText.init";         
CREATE FORCE ALIAS PUBLIC.FT_CREATE_INDEX FOR "org.h2.fulltext.FullText.createIndex";          
CREATE FORCE ALIAS PUBLIC.FT_DROP_INDEX FOR "org.h2.fulltext.FullText.dropIndex";              
CREATE FORCE ALIAS PUBLIC.FT_SEARCH_DATA FOR "org.h2.fulltext.FullText.searchData";            
CREATE SEQUENCE FT.SYSTEM_SEQUENCE_DA1AC80E_D843_4982_B6E3_29092EC16417 START WITH 839 BELONGS_TO_TABLE;       
CREATE SEQUENCE FT.SYSTEM_SEQUENCE_2BE42B4E_0444_46A6_877D_B917F4525AE7 START WITH 1026 BELONGS_TO_TABLE;      
CREATE SEQUENCE FT.SYSTEM_SEQUENCE_88B1E5D5_FAB8_4247_A1C7_6E412B2BE324 START WITH 11 BELONGS_TO_TABLE;        
CREATE CACHED TABLE PUBLIC.MOTIF(
    ID INTEGER NOT NULL,
    LIBELLE VARCHAR(255) NOT NULL,
    RECETTEDEPENSE BOOL NOT NULL
);              
ALTER TABLE PUBLIC.MOTIF ADD CONSTRAINT PUBLIC.CONSTRAINT_4 PRIMARY KEY(ID);   
-- 15 +/- SELECT COUNT(*) FROM PUBLIC.MOTIF;   
INSERT INTO PUBLIC.MOTIF(ID, LIBELLE, RECETTEDEPENSE) VALUES
(1, 'Fournisseurs', TRUE),
(2, 'Salaires', TRUE),
(3, STRINGDECODE('Charges imp\u00f4ts'), TRUE),
(4, 'Emprunt', TRUE),
(5, 'Restaurant', TRUE),
(6, 'B9/B4', TRUE),
(7, 'Dons/Pubs', TRUE),
(8, 'Frais bancaires', TRUE),
(9, 'Rachat parts', TRUE),
(10, 'Assurances', TRUE),
(11, STRINGDECODE('Carte J\u00e9r\u00f4me'), TRUE),
(12, 'Carburants chantiers', TRUE),
(13, 'Parts', FALSE),
(14, 'Remboursement', FALSE),
(15, STRINGDECODE('R\u00e8glements clients'), FALSE); 
CREATE CACHED TABLE PUBLIC.ETAT(
    ID BIGINT NOT NULL,
    LIBELLE VARCHAR(255) NOT NULL
);  
ALTER TABLE PUBLIC.ETAT ADD CONSTRAINT PUBLIC.CONSTRAINT_2 PRIMARY KEY(ID);    
-- 2 +/- SELECT COUNT(*) FROM PUBLIC.ETAT;     
INSERT INTO PUBLIC.ETAT(ID, LIBELLE) VALUES
(1, STRINGDECODE('V\u00e9rifi\u00e9')),
(2, STRINGDECODE('Termin\u00e9'));         
CREATE CACHED TABLE PUBLIC.ENREGISTREMENT(
    ID BIGINT NOT NULL,
    ID_LIBELLE BIGINT NOT NULL,
    ID_MODEREGLEMENT SMALLINT NOT NULL,
    ID_COMPTE SMALLINT NOT NULL,
    ID_MOTIF INTEGER NOT NULL,
    ID_ETAT BIGINT NOT NULL,
    RECETTEDEPENSE CHAR(255) NOT NULL,
    DATEENREGISTREMENT VARCHAR NOT NULL,
    MONTANT DECIMAL(30, 2) NOT NULL,
    ANCIENSOLDE DECIMAL(30, 2) NOT NULL,
    NOUVEAUSOLDE DECIMAL(30, 2) NOT NULL,
    DATEFACTURE VARCHAR,
    NUMCHQ VARCHAR,
    ANTICIPATION BOOLEAN,
    ORDRE INT
);        
ALTER TABLE PUBLIC.ENREGISTREMENT ADD CONSTRAINT PUBLIC.CONSTRAINT_C PRIMARY KEY(ID_COMPTE, ID);               
-- 9 +/- SELECT COUNT(*) FROM PUBLIC.ENREGISTREMENT;           
INSERT INTO PUBLIC.ENREGISTREMENT(ID, ID_LIBELLE, ID_MODEREGLEMENT, ID_COMPTE, ID_MOTIF, ID_ETAT, RECETTEDEPENSE, DATEENREGISTREMENT, MONTANT, ANCIENSOLDE, NOUVEAUSOLDE, DATEFACTURE, NUMCHQ, ANTICIPATION, ORDRE) VALUES
(1, 34, 4, 1, 15, 2, 'Recette', '11 February 2013', 123.00, 1711.00, 1834.00, 'fghj', '', FALSE, 1),
(2, 130, 4, 1, 15, 2, 'Recette', '11 February 2013', 32.00, 1834.00, 1866.00, 'zdqsd', '', FALSE, 2),
(5, 10, 4, 3, 13, 2, 'Recette', '11 February 2013', 123.00, 0.00, 123.00, 'gyhuj', '', FALSE, 1),
(6, 10, 4, 3, 13, 2, 'Recette', '11 February 2013', 32.00, 123.00, 168.00, 'gh', '', FALSE, 2),
(7, 77, 4, 3, 13, 2, 'Recette', '11 February 2013', 24.00, 168.00, 192.00, '', '', FALSE, 3),
(8, 95, 4, 3, 13, 2, 'Recette', '11 February 2013', 32.00, 192.00, 224.00, '', '', FALSE, 4),
(3, 8, 4, 1, 1, 2, 'Recette', '11 February 2013', 345.23, 1866.00, 2211.23, 'sdfv', 'hfdkhfkjsd', FALSE, 3),
(4, 20, 4, 1, 15, 2, 'Recette', '11 February 2013', 56.00, 2211.23, 2267.23, 'ezaea', '', FALSE, 4),
(9, 126, 4, 1, 15, 2, 'Recette', '14 February 2013', 32.00, 2267.23, 2299.23, 'dsq', 'dsq', FALSE, 5);   
CREATE INDEX PUBLIC.I_FK_ENREGISTREMENT_LIBELLE ON PUBLIC.ENREGISTREMENT(ID_LIBELLE);          
CREATE INDEX PUBLIC.I_FK_ENREGISTREMENT_MODEREGLEMENT ON PUBLIC.ENREGISTREMENT(ID_MODEREGLEMENT);              
CREATE INDEX PUBLIC.I_FK_ENREGISTREMENT_COMPTE ON PUBLIC.ENREGISTREMENT(ID_COMPTE);            
CREATE INDEX PUBLIC.I_FK_ENREGISTREMENT_MOTIF ON PUBLIC.ENREGISTREMENT(ID_MOTIF);              
CREATE INDEX PUBLIC.I_FK_ENREGISTREMENT_ETAT ON PUBLIC.ENREGISTREMENT(ID_ETAT);
CREATE CACHED TABLE PUBLIC.MODEREGLEMENT(
    ID SMALLINT NOT NULL,
    LIBELLE VARCHAR(255) NOT NULL
);       
ALTER TABLE PUBLIC.MODEREGLEMENT ADD CONSTRAINT PUBLIC.CONSTRAINT_30 PRIMARY KEY(ID);          
-- 4 +/- SELECT COUNT(*) FROM PUBLIC.MODEREGLEMENT;            
INSERT INTO PUBLIC.MODEREGLEMENT(ID, LIBELLE) VALUES
(1, STRINGDECODE('Pr\u00e9l\u00e8vement')),
(2, 'CHQ'),
(3, 'LCR'),
(4, STRINGDECODE('Remise de ch\u00e8ques'));          
CREATE CACHED TABLE PUBLIC.COMPTA(
    ID INT NOT NULL,
    LIBELLE VARCHAR,
    SOLDEDEPART DECIMAL(10, 2)
); 
ALTER TABLE PUBLIC.COMPTA ADD CONSTRAINT PUBLIC.CONSTRAINT_76 PRIMARY KEY(ID); 
-- 6 +/- SELECT COUNT(*) FROM PUBLIC.COMPTA;   
INSERT INTO PUBLIC.COMPTA(ID, LIBELLE, SOLDEDEPART) VALUES
(6, 'B9 - CREDIT MUTUEL', 0.00),
(5, 'B9 - CIC OUEST', 0.00),
(2, 'BOUCHEREAU - CREDIT MUTUEL', 568.00),
(4, 'B4 - CREDIT MUTUEL', 6113.00),
(3, 'B4 - CIC OUEST', 224.00),
(1, 'BOUCHEREAU - CIC OUEST', 2299.23); 
CREATE CACHED TABLE FT.INDEXES(
    ID INT DEFAULT (NEXT VALUE FOR FT.SYSTEM_SEQUENCE_88B1E5D5_FAB8_4247_A1C7_6E412B2BE324) NOT NULL NULL_TO_DEFAULT SEQUENCE FT.SYSTEM_SEQUENCE_88B1E5D5_FAB8_4247_A1C7_6E412B2BE324,
    SCHEMA VARCHAR,
    TABLE VARCHAR,
    COLUMNS VARCHAR
);           
ALTER TABLE FT.INDEXES ADD CONSTRAINT FT.CONSTRAINT_9 PRIMARY KEY(ID);         
-- 7 +/- SELECT COUNT(*) FROM FT.INDEXES;      
INSERT INTO FT.INDEXES(ID, SCHEMA, TABLE, COLUMNS) VALUES
(1, 'PUBLIC', 'TEST', NULL),
(3, 'PUBLIC', 'ENREGISTREMENT', NULL),
(4, 'PUBLIC', 'ETAT', NULL),
(6, 'PUBLIC', 'MODEREGLEMENT', NULL),
(7, 'PUBLIC', 'MOTIF', NULL),
(8, 'PUBLIC', 'COMPTE', NULL),
(10, 'PUBLIC', 'LIBELLE', NULL); 
CREATE CACHED TABLE FT.WORDS(
    ID INT DEFAULT (NEXT VALUE FOR FT.SYSTEM_SEQUENCE_2BE42B4E_0444_46A6_877D_B917F4525AE7) NOT NULL NULL_TO_DEFAULT SEQUENCE FT.SYSTEM_SEQUENCE_2BE42B4E_0444_46A6_877D_B917F4525AE7,
    NAME VARCHAR
);       
ALTER TABLE FT.WORDS ADD CONSTRAINT FT.CONSTRAINT_4 PRIMARY KEY(ID);           
-- 558 +/- SELECT COUNT(*) FROM FT.WORDS;      
INSERT INTO FT.WORDS(ID, NAME) VALUES
(454, '1'),
(455, 'WORLD'),
(456, 'HELLO'),
(457, '2013'),
(458, '136'),
(459, '05'),
(460, '13'),
(461, '00'),
(462, '2'),
(463, '10'),
(464, '0'),
(465, 'RECETTE'),
(466, '4'),
(467, 'FALSE'),
(468, 'DSQ'),
(469, STRINGDECODE('F\u00c9VRIER')),
(470, 'AAAA'),
(471, '300'),
(472, '95'),
(473, '310'),
(474, '3'),
(475, '59191'),
(476, 'FTYGH'),
(477, '34'),
(478, '322'),
(479, '12'),
(480, '6'),
(481, '5'),
(482, '253'),
(483, 'FS'),
(484, '422'),
(485, '100'),
(486, '372'),
(487, 'DSQJFLS'),
(488, STRINGDECODE('D\u00c9PENSE')),
(489, '50'),
(490, 'GHJFDS'),
(491, '200'),
(492, '42'),
(493, '572'),
(494, '124'),
(495, '15'),
(496, '7'),
(497, 'TRUE'),
(498, '448'),
(499, '571'),
(500, '123'),
(501, '8'),
(502, '06'),
(503, 'H'),
(504, '583'),
(505, '9'),
(506, '35'),
(507, '585'),
(508, 'GHJ'),
(509, '11'),
(510, '588'),
(511, 'FDGDFGDF'),
(512, '21'),
(513, 'FEBRUARY'),
(514, '711'),
(515, 'FD'),
(516, '834'),
(517, '14'),
(518, 'JANUARY'),
(519, 'GFD'),
(520, '846'),
(521, '54'),
(522, '88'),
(523, '858'),
(524, '16'),
(525, '130'),
(526, '870'),
(527, 'TF'),
(528, '100236'),
(529, '17'),
(530, '100000'),
(531, '236'),
(532, 'GH'),
(533, '18'),
(534, '23'),
(535, '150'),
(536, '893'),
(537, STRINGDECODE('V\u00c9RIFI\u00c9')),
(538, STRINGDECODE('TERMIN\u00c9')),
(539, STRINGDECODE('PR\u00c9L\u00c8VEMENT')),
(540, 'CHQ'),
(541, 'LCR'),
(542, 'DE'),
(543, 'REMISE'),
(544, STRINGDECODE('CH\u00c8QUES')),
(545, 'FOURNISSEURS'),
(546, 'SALAIRES'),
(547, 'CHARGES'),
(548, STRINGDECODE('IMP\u00d4TS')),
(549, 'EMPRUNT'),
(550, 'RESTAURANT'),
(551, 'B4'),
(552, 'B9'),
(553, 'PUBS'),
(554, 'DONS'),
(555, 'FRAIS'),
(556, 'BANCAIRES'),
(557, 'PARTS'),
(558, 'RACHAT'),
(559, 'ASSURANCES'),
(560, 'CARTE'),
(561, STRINGDECODE('J\u00c9R\u00d4ME')),
(562, 'CARBURANTS'),
(563, 'CHANTIERS'),
(564, 'REMBOURSEMENT'),
(565, 'CLIENTS'),
(566, STRINGDECODE('R\u00c8GLEMENTS')),
(567, 'OUEST'),
(568, 'CIC'),
(569, 'MUTUEL'),
(570, STRINGDECODE('CR\u00c9DIT')),
(571, 'COMPTE'),
(572, STRINGDECODE('RELEV\u00c9')),
(573, 'CAUTION'),
(574, 'COMMISION'),
(575, 'DKV'),
(576, 'LAVIGNE'),
(577, 'BFM'),
(578, 'MATERIEL'),
(579, STRINGDECODE('INT\u00c9R\u00caTS')),
(580, 'FRANCE'),
(581, 'TELECOM'),
(582, 'GALLOIRES'),
(583, 'GAEC'),
(584, 'ADS'),
(585, 'TECHNIPLANS'),
(586, 'AREST'),
(587, 'MICHEL'),
(588, STRINGDECODE('R\u00c8GLEMENT')),
(589, 'BAUMARD'),
(590, 'BARBE'),
(591, 'D'),
(592, STRINGDECODE('ASSOCI\u00c9S')),
(593, STRINGDECODE('PR\u00caT')),
(594, 'COURANT'),
(595, 'CPTES'),
(596, 'VESTIAIRES'),
(597, 'BUREAUX'),
(598, 'AGRANDISSEMENT'),
(599, '19'),
(600, 'SFR'),
(601, '20'),
(602, 'ELIS'),
(603, 'GOMES'),
(604, 'ALVES'),
(605, 'BRANCHEREAU'),
(606, '22'),
(607, 'ST'),
(608, 'HERBLON'),
(609, '24'),
(610, 'CARBURANT'),
(611, '25'),
(612, 'JULIEN'),
(613, '26'),
(614, 'ANCENIS'),
(615, 'EIFFAGE'),
(616, 'PRISE'),
(617, 'EAU'),
(618, '27'),
(619, 'HUTEAU'),
(620, 'BOULANGERIE'),
(621, '28'),
(622, 'PROXI'),
(623, '29'),
(624, '30'),
(625, 'PETIT'),
(626, 'MARS'),
(627, 'LA'),
(628, 'POSTE'),
(629, 'TIMBRES'),
(630, '31'),
(631, '32'),
(632, 'SGT'),
(633, 'FACTURE'),
(634, 'ARTOP'),
(635, '33'),
(636, 'ADITEC'),
(637, 'SARL'),
(638, 'VEOLIA'),
(639, 'ODALIS'),
(640, '36'),
(641, 'JEAN'),
(642, 'VERBE'),
(643, 'LOUIS'),
(644, '37'),
(645, 'TOM'),
(646, '38'),
(647, 'YOAN'),
(648, '39'),
(649, 'TOUBLANC'),
(650, 'VINCENT'),
(651, 'POILANE'),
(652, '40'),
(653, 'MARYVONNE'),
(654, '41'),
(655, 'BOUYER'),
(656, 'THAUVIN'),
(657, '43'),
(658, 'RIPOCHE'),
(659, 'SUD'),
(660, 'BUREAU'),
(661, '44'),
(662, 'LOIRE'),
(663, '45'),
(664, 'TECHNILAB'),
(665, 'NANTES'),
(666, '46'),
(667, 'ENDUIT'),
(668, '47'),
(669, '48'),
(670, 'AGGLOS'),
(671, 'CHOLET'),
(672, '49'),
(673, 'ROM'),
(674, 'AGRI'),
(675, 'PNEU'),
(676, 'CLINIQUE'),
(677, 'DU'),
(678, 'ECRIVAIN'),
(679, '51'),
(680, 'PUBLIC'),
(681, 'BLUCHER'),
(682, '52'),
(683, '53'),
(684, 'URSSAF'),
(685, 'ANETZ'),
(686, 'BAR'),
(687, 'TERRIEN'),
(688, '55'),
(689, 'FARDEAU'),
(690, 'DIDIER'),
(691, 'BOURREAU'),
(692, '56'),
(693, '57'),
(694, 'LANDAIS'),
(695, '58');             
INSERT INTO FT.WORDS(ID, NAME) VALUES
(696, '59'),
(697, 'SOME'),
(698, 'SMABTP'),
(699, '1E'),
(700, '60'),
(701, 'TRIMESTRE'),
(702, 'COLIS'),
(703, '61'),
(704, '62'),
(705, STRINGDECODE('CH\u00c8QUE')),
(706, '63'),
(707, 'APPORT'),
(708, 'LEBRETON'),
(709, '64'),
(710, 'ASTROLABE'),
(711, '65'),
(712, '66'),
(713, '4E'),
(714, '2012'),
(715, 'HUMANIS'),
(716, '67'),
(717, 'SMIEC'),
(718, '68'),
(719, 'COFIROUTE'),
(720, 'LIBERT'),
(721, '69'),
(722, 'CLISSON'),
(723, '70'),
(724, 'CIO'),
(725, 'COUDRAIS'),
(726, '71'),
(727, 'CHAMPEAU'),
(728, '72'),
(729, STRINGDECODE('D\u00c9CEMBRE')),
(730, '73'),
(731, 'TVA'),
(732, '74'),
(733, 'MONNIER'),
(734, 'MATERIAUX'),
(735, '75'),
(736, 'HERVE'),
(737, 'BETON'),
(738, '76'),
(739, '77'),
(740, 'RETRAITE'),
(741, 'SUPPL'),
(742, 'LEADER'),
(743, 'GENERALI'),
(744, '78'),
(745, 'MISMO'),
(746, '79'),
(747, 'AFPA'),
(748, '80'),
(749, 'BALLUT'),
(750, 'CLOS'),
(751, 'RONSARD'),
(752, '81'),
(753, 'TP'),
(754, 'JAN'),
(755, '82'),
(756, 'LEHEE'),
(757, '83'),
(758, 'CONCELLES'),
(759, 'JEROME'),
(760, '84'),
(761, 'LEDUC'),
(762, '85'),
(763, 'MAIRIE'),
(764, 'DRAIN'),
(765, '86'),
(766, 'DEC'),
(767, 'VM'),
(768, '87'),
(769, 'GRAFIBURO'),
(770, 'MENESES'),
(771, 'HD21'),
(772, 'GRUE'),
(773, 'ACOMPTE'),
(774, 'VIREMENT'),
(775, '89'),
(776, '90'),
(777, 'TERRENA'),
(778, '91'),
(779, '92'),
(780, 'SAB'),
(781, '93'),
(782, '94'),
(783, 'PRINT'),
(784, 'GRIFF'),
(785, 'HILTI'),
(786, 'LAFARGE'),
(787, '96'),
(788, 'GRANULATS'),
(789, '97'),
(790, 'PATIS'),
(791, 'CIS'),
(792, '98'),
(793, STRINGDECODE('ANN\u00c9E')),
(794, 'BTP'),
(795, 'PRO'),
(796, 'COMMISSION'),
(797, '99'),
(798, 'LAITA'),
(799, 'BMO'),
(800, 'SCI'),
(801, '101'),
(802, 'ALLIORA'),
(803, '102'),
(804, '103'),
(805, 'AUDIT'),
(806, '104'),
(807, 'AMTEC'),
(808, '105'),
(809, 'SAH'),
(810, 'SOLDE'),
(811, 'DRFIP'),
(812, '106'),
(813, 'ETAT'),
(814, '107'),
(815, '108'),
(816, '109'),
(817, 'AGH'),
(818, 'AD'),
(819, 'GRISE'),
(820, '110'),
(821, '822QT'),
(822, 'MASCOTT'),
(823, 'SFAC'),
(824, '111'),
(825, 'DECLARATION'),
(826, '112'),
(827, '113'),
(828, 'BLANLOEIL'),
(829, '114'),
(830, 'CAILLER'),
(831, '115'),
(832, 'DUPONT'),
(833, '116'),
(834, 'GARAGE'),
(835, 'GARE'),
(836, '117'),
(837, 'INERTA'),
(838, '118'),
(839, 'CREATION'),
(840, 'PAYSAGE'),
(841, '119'),
(842, '120'),
(843, 'PHELIPPEAU'),
(844, 'RABJEAU'),
(845, '121'),
(846, 'AUTOS'),
(847, 'PIECES'),
(848, '122'),
(849, 'SMBC'),
(850, 'SODEMAT'),
(851, '125'),
(852, '126'),
(853, 'HELIO'),
(854, 'GRAPHIC'),
(855, '127'),
(856, '128'),
(857, 'PRET'),
(858, 'PROMAN'),
(859, '129'),
(860, 'ENERGIE'),
(861, 'ACTI'),
(862, '131'),
(863, '132'),
(864, 'PELLES'),
(865, 'CAMION'),
(866, 'MINI'),
(867, '133'),
(868, 'CHARIER'),
(869, 'CM'),
(870, '134'),
(871, 'BETONS'),
(872, 'UNIBETON'),
(873, '135'),
(874, 'FOBI'),
(875, 'AUGUSTE'),
(876, '137'),
(877, 'COUSSEAU'),
(878, '138'),
(879, 'COUTAUD'),
(880, '139'),
(881, 'SODEM'),
(882, '140'),
(883, 'HONORAIRES'),
(884, 'LOYER'),
(885, '141'),
(886, STRINGDECODE('B\u00c2TIMENT')),
(887, 'ACHAT'),
(888, '142'),
(889, 'FRANS'),
(890, '143'),
(891, 'BONHOMME'),
(892, '144'),
(893, 'LEBERT'),
(894, 'LOCAM'),
(895, 'INTERNET'),
(896, STRINGDECODE('ACC\u00c8S')),
(897, '145'),
(898, 'NOVALTOS'),
(899, '146'),
(900, 'NOVALTO'),
(901, 'BUSINESS'),
(902, '147'),
(903, '148'),
(904, '149'),
(905, 'TRUC'),
(906, 'FOBITEC'),
(907, 'BOUCHEREAU'),
(908, 'MUTUELLE'),
(909, 'DSDQS'),
(910, '05FDSFS'),
(911, 'NULL'),
(912, '903'),
(913, 'YHJK'),
(915, '1000'),
(916, '3456'),
(917, '1123'),
(918, 'DQS'),
(919, '5479'),
(920, '4356'),
(921, '6045'),
(922, '566'),
(923, '6060'),
(924, '1138'),
(925, '5494'),
(926, 'DQSD'),
(927, '1015'),
(928, '1031'),
(929, '5387'),
(930, '5953'),
(931, '1023'),
(932, '1038'),
(933, '5394'),
(934, '5960'),
(935, '1072'),
(936, '1638'),
(937, '1106'),
(938, '1040'),
(939, '1080'),
(940, '1095'),
(941, '1129'),
(942, '1056'),
(943, '1090'),
(944, '1656'),
(945, '1116'),
(946, '1682'),
(947, '1085'),
(948, '1145'),
(949, '1711'),
(950, '1234'),
(951, '4690'),
(952, 'FGHB'),
(953, '4813');         
INSERT INTO FT.WORDS(ID, NAME) VALUES
(954, '151'),
(955, '86433'),
(956, 'HBJN'),
(957, '91246'),
(958, 'GHBJ'),
(959, '91900'),
(960, '654'),
(961, '234'),
(962, '92134'),
(963, '4733'),
(964, '91166'),
(965, '91820'),
(966, '92054'),
(967, '445'),
(968, 'ZDZ'),
(969, '568'),
(970, 'SQDQSD'),
(971, '1094'),
(972, '1154'),
(973, '1720'),
(974, '435'),
(975, '5125'),
(976, '91558'),
(977, '92212'),
(978, '92446'),
(979, '5225'),
(980, '5879'),
(981, '6113'),
(982, '1166'),
(996, '1844'),
(997, '1834'),
(998, 'ZDQSD'),
(999, '1866'),
(1000, 'SDFV'),
(1001, '1864'),
(1002, '1886'),
(1003, '1904'),
(1004, 'EZAEA'),
(1005, '1926'),
(1006, '1966'),
(1007, '2006'),
(1008, 'GYHUJ'),
(1009, '168'),
(1010, '224'),
(1011, '208'),
(1012, '218'),
(1013, '2016'),
(1014, '211'),
(1015, '221'),
(1016, '243'),
(1017, '345'),
(1018, '2211'),
(1019, '2261'),
(1020, '2267'),
(1021, '192'),
(1022, '1922'),
(1023, 'HFDKHFKJSD'),
(1024, '2299'),
(1025, '2243');      
CREATE CACHED TABLE FT.ROWS(
    ID BIGINT DEFAULT (NEXT VALUE FOR FT.SYSTEM_SEQUENCE_DA1AC80E_D843_4982_B6E3_29092EC16417) NOT NULL NULL_TO_DEFAULT SEQUENCE FT.SYSTEM_SEQUENCE_DA1AC80E_D843_4982_B6E3_29092EC16417,
    HASH INT,
    INDEXID INT,
    KEY VARCHAR
);       
ALTER TABLE FT.ROWS ADD CONSTRAINT FT.CONSTRAINT_2 PRIMARY KEY(ID);            
-- 197 +/- SELECT COUNT(*) FROM FT.ROWS;       
INSERT INTO FT.ROWS(ID, HASH, INDEXID, KEY) VALUES
(493, 1042868569, 1, '"ID"=1'),
(512, 1042868569, 4, '"ID"=1'),
(513, 1042868570, 4, '"ID"=2'),
(514, 1042868569, 6, '"ID"=1'),
(515, 1042868570, 6, '"ID"=2'),
(516, 1042868571, 6, '"ID"=3'),
(517, 1042868572, 6, '"ID"=4'),
(518, 1042868569, 7, '"ID"=1'),
(519, 1042868570, 7, '"ID"=2'),
(520, 1042868571, 7, '"ID"=3'),
(521, 1042868572, 7, '"ID"=4'),
(522, 1042868573, 7, '"ID"=5'),
(523, 1042868574, 7, '"ID"=6'),
(524, 1042868575, 7, '"ID"=7'),
(525, 1042868576, 7, '"ID"=8'),
(526, 1042868577, 7, '"ID"=9'),
(527, -2030812681, 7, '"ID"=10'),
(528, -2030812680, 7, '"ID"=11'),
(529, -2030812679, 7, '"ID"=12'),
(530, -2030812678, 7, '"ID"=13'),
(531, -2030812677, 7, '"ID"=14'),
(532, -2030812676, 7, '"ID"=15'),
(533, 1042868569, 8, '"ID"=1'),
(534, 1042868570, 8, '"ID"=2'),
(535, 1042868569, 10, '"ID"=1'),
(536, 1042868570, 10, '"ID"=2'),
(537, 1042868571, 10, '"ID"=3'),
(538, 1042868572, 10, '"ID"=4'),
(539, 1042868573, 10, '"ID"=5'),
(540, 1042868574, 10, '"ID"=6'),
(541, 1042868575, 10, '"ID"=7'),
(542, 1042868576, 10, '"ID"=8'),
(543, 1042868577, 10, '"ID"=9'),
(544, -2030812681, 10, '"ID"=10'),
(545, -2030812680, 10, '"ID"=11'),
(546, -2030812679, 10, '"ID"=12'),
(547, -2030812678, 10, '"ID"=13'),
(548, -2030812677, 10, '"ID"=14'),
(549, -2030812676, 10, '"ID"=15'),
(550, -2030812675, 10, '"ID"=16'),
(551, -2030812674, 10, '"ID"=17'),
(552, -2030812673, 10, '"ID"=18'),
(553, -2030812672, 10, '"ID"=19'),
(554, -2030812650, 10, '"ID"=20'),
(555, -2030812649, 10, '"ID"=21'),
(556, -2030812648, 10, '"ID"=22'),
(557, -2030812647, 10, '"ID"=23'),
(558, -2030812646, 10, '"ID"=24'),
(559, -2030812645, 10, '"ID"=25'),
(560, -2030812644, 10, '"ID"=26'),
(561, -2030812643, 10, '"ID"=27'),
(562, -2030812642, 10, '"ID"=28'),
(563, -2030812641, 10, '"ID"=29'),
(564, -2030812619, 10, '"ID"=30'),
(565, -2030812618, 10, '"ID"=31'),
(566, -2030812617, 10, '"ID"=32'),
(567, -2030812616, 10, '"ID"=33'),
(568, -2030812615, 10, '"ID"=34'),
(569, -2030812614, 10, '"ID"=35'),
(570, -2030812613, 10, '"ID"=36'),
(571, -2030812612, 10, '"ID"=37'),
(572, -2030812611, 10, '"ID"=38'),
(573, -2030812610, 10, '"ID"=39'),
(574, -2030812588, 10, '"ID"=40'),
(575, -2030812587, 10, '"ID"=41'),
(576, -2030812586, 10, '"ID"=42'),
(577, -2030812585, 10, '"ID"=43'),
(578, -2030812584, 10, '"ID"=44'),
(579, -2030812583, 10, '"ID"=45'),
(580, -2030812582, 10, '"ID"=46'),
(581, -2030812581, 10, '"ID"=47'),
(582, -2030812580, 10, '"ID"=48'),
(583, -2030812579, 10, '"ID"=49'),
(584, -2030812557, 10, '"ID"=50'),
(585, -2030812556, 10, '"ID"=51'),
(586, -2030812555, 10, '"ID"=52'),
(587, -2030812554, 10, '"ID"=53'),
(588, -2030812553, 10, '"ID"=54'),
(589, -2030812552, 10, '"ID"=55'),
(590, -2030812551, 10, '"ID"=56'),
(591, -2030812550, 10, '"ID"=57'),
(592, -2030812549, 10, '"ID"=58'),
(593, -2030812548, 10, '"ID"=59'),
(594, -2030812526, 10, '"ID"=60'),
(595, -2030812525, 10, '"ID"=61'),
(596, -2030812524, 10, '"ID"=62'),
(597, -2030812523, 10, '"ID"=63'),
(598, -2030812522, 10, '"ID"=64'),
(599, -2030812521, 10, '"ID"=65'),
(600, -2030812520, 10, '"ID"=66'),
(601, -2030812519, 10, '"ID"=67'),
(602, -2030812518, 10, '"ID"=68'),
(603, -2030812517, 10, '"ID"=69'),
(604, -2030812495, 10, '"ID"=70'),
(605, -2030812494, 10, '"ID"=71'),
(606, -2030812493, 10, '"ID"=72'),
(607, -2030812492, 10, '"ID"=73'),
(608, -2030812491, 10, '"ID"=74'),
(609, -2030812490, 10, '"ID"=75'),
(610, -2030812489, 10, '"ID"=76'),
(611, -2030812488, 10, '"ID"=77'),
(612, -2030812487, 10, '"ID"=78'),
(613, -2030812486, 10, '"ID"=79'),
(614, -2030812464, 10, '"ID"=80'),
(615, -2030812463, 10, '"ID"=81'),
(616, -2030812462, 10, '"ID"=82'),
(617, -2030812461, 10, '"ID"=83'),
(618, -2030812460, 10, '"ID"=84'),
(619, -2030812459, 10, '"ID"=85'),
(620, -2030812458, 10, '"ID"=86'),
(621, -2030812457, 10, '"ID"=87'),
(622, -2030812456, 10, '"ID"=88'),
(623, -2030812455, 10, '"ID"=89'),
(624, -2030812433, 10, '"ID"=90'),
(625, -2030812432, 10, '"ID"=91'),
(626, -2030812431, 10, '"ID"=92'),
(627, -2030812430, 10, '"ID"=93'),
(628, -2030812429, 10, '"ID"=94');         
INSERT INTO FT.ROWS(ID, HASH, INDEXID, KEY) VALUES
(629, -2030812428, 10, '"ID"=95'),
(630, -2030812427, 10, '"ID"=96'),
(631, -2030812426, 10, '"ID"=97'),
(632, -2030812425, 10, '"ID"=98'),
(633, -2030812424, 10, '"ID"=99'),
(634, 1469316377, 10, '"ID"=100'),
(635, 1469316378, 10, '"ID"=101'),
(636, 1469316379, 10, '"ID"=102'),
(637, 1469316380, 10, '"ID"=103'),
(638, 1469316381, 10, '"ID"=104'),
(639, 1469316382, 10, '"ID"=105'),
(640, 1469316383, 10, '"ID"=106'),
(641, 1469316384, 10, '"ID"=107'),
(642, 1469316385, 10, '"ID"=108'),
(643, 1469316386, 10, '"ID"=109'),
(644, 1469316408, 10, '"ID"=110'),
(645, 1469316409, 10, '"ID"=111'),
(646, 1469316410, 10, '"ID"=112'),
(647, 1469316411, 10, '"ID"=113'),
(648, 1469316412, 10, '"ID"=114'),
(649, 1469316413, 10, '"ID"=115'),
(650, 1469316414, 10, '"ID"=116'),
(651, 1469316415, 10, '"ID"=117'),
(652, 1469316416, 10, '"ID"=118'),
(653, 1469316417, 10, '"ID"=119'),
(654, 1469316439, 10, '"ID"=120'),
(655, 1469316440, 10, '"ID"=121'),
(656, 1469316441, 10, '"ID"=122'),
(657, 1469316442, 10, '"ID"=123'),
(658, 1469316443, 10, '"ID"=124'),
(659, 1469316444, 10, '"ID"=125'),
(660, 1469316445, 10, '"ID"=126'),
(661, 1469316446, 10, '"ID"=127'),
(662, 1469316447, 10, '"ID"=128'),
(663, 1469316448, 10, '"ID"=129'),
(664, 1469316470, 10, '"ID"=130'),
(665, 1469316471, 10, '"ID"=131'),
(666, 1469316472, 10, '"ID"=132'),
(667, 1469316473, 10, '"ID"=133'),
(668, 1469316474, 10, '"ID"=134'),
(669, 1469316475, 10, '"ID"=135'),
(670, 1469316476, 10, '"ID"=136'),
(671, 1469316477, 10, '"ID"=137'),
(672, 1469316478, 10, '"ID"=138'),
(673, 1469316479, 10, '"ID"=139'),
(674, 1469316501, 10, '"ID"=140'),
(675, 1469316502, 10, '"ID"=141'),
(676, 1469316503, 10, '"ID"=142'),
(677, 1469316504, 10, '"ID"=143'),
(678, 1469316505, 10, '"ID"=144'),
(679, 1469316506, 10, '"ID"=145'),
(680, 1469316507, 10, '"ID"=146'),
(681, 1469316508, 10, '"ID"=147'),
(682, 1469316509, 10, '"ID"=148'),
(683, 1469316510, 10, '"ID"=149'),
(684, 1469316532, 10, '"ID"=150'),
(685, 1042868569, 0, '"ID"=1'),
(686, 1042868570, 0, '"ID"=2'),
(693, -515918842, 3, '"ID"=21 AND "ID_COMPTE"=5'),
(694, -551170364, 3, '"ID"=1 AND "ID_COMPTE"=1'),
(695, -1395642232, 3, '"ID"=2 AND "ID_COMPTE"=4'),
(748, -1323034291, 3, '"ID"=7 AND "ID_COMPTE"=4'),
(750, 1469316533, 10, '"ID"=151'),
(761, -951566491, 3, '"ID"=12 AND "ID_COMPTE"=2'),
(766, -478562423, 3, '"ID"=6 AND "ID_COMPTE"=1'),
(770, -1796038362, 3, '"ID"=13 AND "ID_COMPTE"=2'),
(771, 2127461134, 3, '"ID"=8 AND "ID_COMPTE"=4'),
(776, 1282989263, 3, '"ID"=9 AND "ID_COMPTE"=4'),
(777, 737377253, 3, '"ID"=10 AND "ID_COMPTE"=4'),
(778, -107094618, 3, '"ID"=11 AND "ID_COMPTE"=4'),
(782, 365909448, 3, '"ID"=5 AND "ID_COMPTE"=1'),
(787, -1395642235, 3, '"ID"=2 AND "ID_COMPTE"=1'),
(792, 365909450, 3, '"ID"=5 AND "ID_COMPTE"=3'),
(802, -478562421, 3, '"ID"=6 AND "ID_COMPTE"=3'),
(811, -1323034292, 3, '"ID"=7 AND "ID_COMPTE"=3'),
(812, 2127461133, 3, '"ID"=8 AND "ID_COMPTE"=3'),
(826, 2054853190, 3, '"ID"=3 AND "ID_COMPTE"=1'),
(837, 1210381319, 3, '"ID"=4 AND "ID_COMPTE"=1'),
(838, 1282989260, 3, '"ID"=9 AND "ID_COMPTE"=1');   
CREATE CACHED TABLE FT.MAP(
    ROWID INT NOT NULL SELECTIVITY 23,
    WORDID INT NOT NULL SELECTIVITY 73
);   
ALTER TABLE FT.MAP ADD CONSTRAINT FT.CONSTRAINT_1 PRIMARY KEY(WORDID, ROWID);  
-- 1053 +/- SELECT COUNT(*) FROM FT.MAP;       
INSERT INTO FT.MAP(ROWID, WORDID) VALUES
(493, 454),
(493, 455),
(493, 456),
(512, 454),
(512, 537),
(513, 462),
(513, 538),
(514, 454),
(514, 539),
(515, 462),
(515, 540),
(516, 474),
(516, 541),
(517, 466),
(517, 542),
(517, 543),
(517, 544),
(518, 454),
(518, 497),
(518, 545),
(519, 462),
(519, 497),
(519, 546),
(520, 474),
(520, 497),
(520, 547),
(520, 548),
(521, 466),
(521, 497),
(521, 549),
(522, 481),
(522, 497),
(522, 550),
(523, 480),
(523, 497),
(523, 551),
(523, 552),
(524, 496),
(524, 497),
(524, 553),
(524, 554),
(525, 497),
(525, 501),
(525, 555),
(525, 556),
(526, 497),
(526, 505),
(526, 557),
(526, 558),
(527, 463),
(527, 497),
(527, 559),
(528, 497),
(528, 509),
(528, 560),
(528, 561),
(529, 479),
(529, 497),
(529, 562),
(529, 563),
(530, 460),
(530, 467),
(530, 557),
(531, 467),
(531, 517),
(531, 564),
(532, 467),
(532, 495),
(532, 565),
(532, 566),
(533, 454),
(533, 522),
(533, 536),
(533, 567),
(533, 568),
(534, 461),
(534, 462),
(534, 528),
(534, 569),
(534, 570),
(535, 454),
(536, 454),
(536, 462),
(536, 542),
(536, 555),
(536, 571),
(536, 572),
(537, 454),
(537, 474),
(537, 573),
(537, 574),
(538, 454),
(538, 466),
(538, 575),
(539, 454),
(539, 481),
(539, 576),
(540, 454),
(540, 480),
(540, 577),
(540, 578),
(541, 454),
(541, 496),
(541, 555),
(541, 579),
(542, 454),
(542, 501),
(542, 580),
(542, 581),
(543, 454),
(543, 505),
(543, 582),
(543, 583),
(544, 454),
(544, 463),
(544, 584),
(545, 454),
(545, 509),
(545, 585),
(546, 454),
(546, 479),
(546, 586),
(547, 454),
(547, 460),
(547, 587),
(547, 588),
(547, 589),
(548, 454),
(548, 517),
(548, 588),
(549, 454),
(549, 495),
(549, 588),
(549, 590),
(550, 454),
(550, 524),
(550, 542),
(550, 552),
(550, 558),
(550, 591),
(550, 592),
(550, 593),
(550, 594),
(550, 595),
(551, 454),
(551, 529),
(551, 593),
(552, 454),
(552, 533),
(552, 593),
(552, 596),
(552, 597),
(552, 598),
(553, 454),
(553, 599),
(553, 600),
(554, 454),
(554, 601),
(554, 602),
(555, 454),
(555, 512),
(555, 588),
(555, 603),
(555, 604),
(556, 454),
(556, 588),
(556, 605),
(556, 606),
(557, 454),
(557, 534),
(557, 550),
(557, 607),
(557, 608),
(558, 454),
(558, 587),
(558, 609),
(558, 610),
(559, 454),
(559, 550),
(559, 611),
(560, 454),
(560, 550),
(560, 607),
(560, 612),
(560, 613),
(561, 454),
(561, 588),
(561, 614),
(561, 615),
(561, 616),
(561, 617),
(561, 618),
(562, 454),
(562, 619),
(562, 620),
(562, 621),
(563, 454),
(563, 622),
(563, 623),
(564, 454),
(564, 550),
(564, 624),
(564, 625),
(564, 626),
(565, 454),
(565, 627),
(565, 628),
(565, 629),
(565, 630),
(566, 454),
(566, 555),
(566, 556),
(566, 631),
(566, 632),
(566, 633),
(567, 454),
(567, 634),
(567, 635),
(568, 454),
(568, 477),
(568, 636),
(569, 454),
(569, 506),
(569, 617),
(569, 637),
(569, 638),
(570, 454),
(570, 588),
(570, 639),
(570, 640),
(571, 454),
(571, 588),
(571, 641),
(571, 642),
(571, 643),
(571, 644),
(572, 454),
(572, 588),
(572, 645),
(572, 646),
(573, 454),
(573, 588),
(573, 647),
(573, 648),
(573, 649),
(574, 454),
(574, 588),
(574, 650),
(574, 651),
(574, 652),
(575, 454),
(575, 588),
(575, 653),
(575, 654),
(575, 655),
(576, 454),
(576, 492),
(576, 656),
(577, 454),
(577, 657),
(577, 658),
(578, 454),
(578, 659),
(578, 660),
(578, 661),
(578, 662),
(579, 454),
(579, 663),
(579, 664),
(580, 454),
(580, 550),
(580, 665),
(580, 666),
(581, 454),
(581, 661),
(581, 667),
(581, 668),
(582, 454),
(582, 669),
(582, 670),
(582, 671),
(583, 454),
(583, 672),
(583, 673),
(583, 674),
(584, 454),
(584, 489),
(584, 675),
(584, 676),
(584, 677),
(585, 454),
(585, 678),
(585, 679),
(585, 680),
(586, 454),
(586, 681),
(586, 682),
(587, 454),
(587, 683),
(587, 684),
(588, 454),
(588, 521),
(588, 588),
(588, 685),
(588, 686),
(589, 454),
(589, 588),
(589, 687),
(589, 688),
(589, 689),
(590, 454),
(590, 588),
(590, 690),
(590, 691),
(590, 692),
(591, 454),
(591, 588),
(591, 638),
(591, 693),
(592, 454),
(592, 588),
(592, 694),
(592, 695),
(593, 454),
(593, 696),
(593, 697),
(594, 454),
(594, 457),
(594, 698),
(594, 699),
(594, 700),
(594, 701),
(595, 454),
(595, 627),
(595, 628),
(595, 702),
(595, 703),
(596, 454),
(596, 550);   
INSERT INTO FT.MAP(ROWID, WORDID) VALUES
(596, 614),
(596, 704),
(597, 454),
(597, 571),
(597, 627),
(597, 628),
(597, 705),
(597, 706),
(597, 707),
(598, 454),
(598, 708),
(598, 709),
(599, 454),
(599, 588),
(599, 710),
(599, 711),
(600, 454),
(600, 701),
(600, 712),
(600, 713),
(600, 714),
(600, 715),
(601, 454),
(601, 457),
(601, 699),
(601, 701),
(601, 716),
(601, 717),
(602, 454),
(602, 718),
(602, 719),
(602, 720),
(603, 454),
(603, 550),
(603, 650),
(603, 721),
(603, 722),
(604, 454),
(604, 557),
(604, 723),
(604, 724),
(605, 454),
(605, 725),
(605, 726),
(606, 454),
(606, 588),
(606, 727),
(606, 728),
(607, 454),
(607, 714),
(607, 729),
(607, 730),
(607, 731),
(608, 454),
(608, 732),
(608, 733),
(609, 454),
(609, 662),
(609, 734),
(609, 735),
(610, 454),
(610, 662),
(610, 736),
(610, 737),
(610, 738),
(611, 454),
(611, 739),
(611, 740),
(611, 741),
(611, 742),
(611, 743),
(612, 454),
(612, 659),
(612, 662),
(612, 674),
(612, 744),
(613, 454),
(613, 745),
(613, 746),
(614, 454),
(614, 747),
(614, 748),
(615, 454),
(615, 749),
(615, 750),
(615, 751),
(615, 752),
(615, 753),
(616, 454),
(616, 754),
(616, 755),
(616, 756),
(617, 454),
(617, 542),
(617, 550),
(617, 607),
(617, 612),
(617, 757),
(617, 758),
(618, 454),
(618, 550),
(618, 759),
(618, 760),
(619, 454),
(619, 761),
(619, 762),
(620, 454),
(620, 588),
(620, 763),
(620, 764),
(620, 765),
(621, 454),
(621, 766),
(621, 767),
(621, 768),
(622, 454),
(622, 522),
(622, 769),
(623, 454),
(623, 770),
(623, 771),
(623, 772),
(623, 773),
(623, 774),
(623, 775),
(624, 454),
(624, 575),
(624, 776),
(625, 454),
(625, 588),
(625, 777),
(625, 778),
(626, 454),
(626, 584),
(626, 779),
(627, 454),
(627, 780),
(627, 781),
(628, 454),
(628, 782),
(628, 783),
(628, 784),
(629, 454),
(629, 472),
(629, 785),
(630, 454),
(630, 786),
(630, 787),
(630, 788),
(631, 454),
(631, 580),
(631, 588),
(631, 789),
(631, 790),
(631, 791),
(632, 454),
(632, 714),
(632, 792),
(632, 793),
(632, 794),
(632, 795),
(633, 454),
(633, 573),
(633, 796),
(633, 797),
(634, 454),
(634, 485),
(634, 588),
(634, 798),
(635, 454),
(635, 588),
(635, 799),
(635, 800),
(635, 801),
(636, 454),
(636, 588),
(636, 802),
(636, 803),
(637, 454),
(637, 584),
(637, 588),
(637, 804),
(638, 454),
(638, 805),
(638, 806),
(638, 807),
(639, 454),
(639, 761),
(639, 808),
(639, 809),
(640, 454),
(640, 810),
(640, 811),
(640, 812),
(640, 813),
(641, 454),
(641, 580),
(641, 581),
(641, 814),
(642, 454),
(642, 602),
(642, 815),
(643, 454),
(643, 750),
(643, 751),
(643, 816),
(643, 817),
(644, 454),
(644, 560),
(644, 818),
(644, 819),
(644, 820),
(644, 821),
(644, 822),
(645, 454),
(645, 714),
(645, 766),
(645, 823),
(645, 824),
(645, 825),
(646, 454),
(646, 550),
(646, 561),
(646, 665),
(646, 826),
(647, 454),
(647, 827),
(647, 828),
(648, 454),
(648, 829),
(648, 830),
(649, 454),
(649, 831),
(649, 832),
(650, 454),
(650, 542),
(650, 627),
(650, 833),
(650, 834),
(650, 835),
(651, 454),
(651, 836),
(651, 837),
(652, 454),
(652, 576),
(652, 838),
(653, 454),
(653, 662),
(653, 839),
(653, 840),
(653, 841),
(654, 454),
(654, 842),
(654, 843),
(655, 454),
(655, 844),
(655, 845),
(655, 846),
(655, 847),
(656, 454),
(656, 848),
(656, 849),
(657, 454),
(657, 500),
(657, 850),
(658, 454),
(658, 494),
(658, 687),
(658, 834),
(659, 454),
(659, 550),
(659, 614),
(659, 844),
(659, 851),
(660, 454),
(660, 852),
(660, 853),
(660, 854),
(661, 454),
(661, 542),
(661, 552),
(661, 558),
(661, 592),
(661, 593),
(661, 594),
(661, 595),
(661, 855),
(662, 454),
(662, 596),
(662, 597),
(662, 598),
(662, 856),
(662, 857),
(663, 454),
(663, 858),
(663, 859),
(664, 454),
(664, 525),
(664, 860),
(664, 861),
(665, 454),
(665, 600),
(665, 862),
(666, 454),
(666, 462),
(666, 593),
(666, 863),
(666, 864),
(666, 865),
(666, 866),
(667, 454),
(667, 867),
(667, 868),
(667, 869),
(668, 454),
(668, 786),
(668, 870),
(668, 871),
(669, 454),
(669, 872),
(669, 873),
(670, 454),
(670, 458),
(670, 874),
(671, 454),
(671, 875),
(671, 876),
(671, 877),
(672, 454),
(672, 878),
(672, 879),
(673, 454),
(673, 880),
(673, 881),
(674, 454),
(674, 552),
(674, 588),
(674, 882),
(674, 883);   
INSERT INTO FT.MAP(ROWID, WORDID) VALUES
(675, 454),
(675, 551),
(675, 884),
(675, 885),
(676, 454),
(676, 593),
(676, 886),
(676, 887),
(676, 888),
(677, 454),
(677, 889),
(677, 890),
(677, 891),
(678, 454),
(678, 892),
(678, 893),
(679, 454),
(679, 894),
(679, 895),
(679, 896),
(679, 897),
(679, 898),
(680, 454),
(680, 894),
(680, 896),
(680, 899),
(680, 900),
(680, 901),
(681, 454),
(681, 483),
(681, 902),
(682, 454),
(682, 457),
(682, 459),
(682, 469),
(682, 903),
(683, 454),
(683, 904),
(683, 905),
(684, 454),
(684, 535),
(684, 906),
(685, 454),
(685, 522),
(685, 536),
(685, 567),
(685, 568),
(685, 907),
(686, 461),
(686, 462),
(686, 528),
(686, 569),
(686, 570),
(686, 907),
(693, 454),
(693, 457),
(693, 461),
(693, 462),
(693, 464),
(693, 467),
(693, 481),
(693, 488),
(693, 500),
(693, 509),
(693, 512),
(693, 513),
(693, 631),
(693, 913),
(694, 454),
(694, 457),
(694, 461),
(694, 462),
(694, 464),
(694, 465),
(694, 467),
(694, 477),
(694, 509),
(694, 513),
(694, 517),
(694, 915),
(695, 454),
(695, 457),
(695, 460),
(695, 461),
(695, 462),
(695, 464),
(695, 465),
(695, 466),
(695, 467),
(695, 474),
(695, 509),
(695, 513),
(695, 683),
(695, 916),
(748, 454),
(748, 457),
(748, 460),
(748, 461),
(748, 462),
(748, 465),
(748, 466),
(748, 467),
(748, 496),
(748, 509),
(748, 512),
(748, 513),
(748, 909),
(748, 916),
(748, 950),
(748, 951),
(750, 466),
(750, 508),
(750, 954),
(761, 454),
(761, 457),
(761, 460),
(761, 461),
(761, 462),
(761, 464),
(761, 465),
(761, 466),
(761, 467),
(761, 479),
(761, 500),
(761, 509),
(761, 513),
(761, 525),
(761, 958),
(765, 480),
(765, 481),
(765, 652),
(765, 915),
(765, 938),
(765, 970),
(766, 454),
(766, 457),
(766, 461),
(766, 462),
(766, 465),
(766, 466),
(766, 467),
(766, 474),
(766, 480),
(766, 495),
(766, 509),
(766, 513),
(766, 521),
(766, 867),
(766, 918),
(766, 938),
(766, 971),
(770, 457),
(770, 460),
(770, 461),
(770, 462),
(770, 465),
(770, 466),
(770, 467),
(770, 500),
(770, 509),
(770, 513),
(770, 631),
(770, 748),
(770, 968),
(770, 969),
(771, 457),
(771, 461),
(771, 462),
(771, 465),
(771, 466),
(771, 467),
(771, 474),
(771, 477),
(771, 495),
(771, 501),
(771, 509),
(771, 513),
(771, 951),
(771, 952),
(771, 974),
(771, 975),
(776, 454),
(776, 457),
(776, 461),
(776, 462),
(776, 465),
(776, 466),
(776, 467),
(776, 485),
(776, 495),
(776, 505),
(776, 509),
(776, 513),
(776, 954),
(776, 956),
(776, 975),
(776, 979),
(777, 454),
(777, 457),
(777, 461),
(777, 462),
(777, 463),
(777, 465),
(777, 466),
(777, 467),
(777, 481),
(777, 509),
(777, 513),
(777, 958),
(777, 960),
(777, 979),
(777, 980),
(778, 457),
(778, 461),
(778, 462),
(778, 465),
(778, 466),
(778, 467),
(778, 480),
(778, 495),
(778, 509),
(778, 513),
(778, 852),
(778, 958),
(778, 961),
(778, 980),
(778, 981),
(781, 477),
(781, 631),
(781, 918),
(781, 971),
(781, 972),
(782, 454),
(782, 457),
(782, 461),
(782, 462),
(782, 465),
(782, 466),
(782, 467),
(782, 479),
(782, 481),
(782, 509),
(782, 513),
(782, 525),
(782, 918),
(782, 972),
(782, 982),
(787, 454),
(787, 457),
(787, 461),
(787, 462),
(787, 465),
(787, 466),
(787, 467),
(787, 495),
(787, 509),
(787, 513),
(787, 525),
(787, 631),
(787, 997),
(787, 998),
(787, 999),
(792, 454),
(792, 457),
(792, 460),
(792, 461),
(792, 462),
(792, 463),
(792, 464),
(792, 465),
(792, 466),
(792, 467),
(792, 474),
(792, 481),
(792, 500),
(792, 509),
(792, 513),
(792, 1008),
(802, 457),
(802, 460),
(802, 461),
(802, 462),
(802, 463),
(802, 465),
(802, 466),
(802, 467),
(802, 474),
(802, 480),
(802, 500),
(802, 509),
(802, 513),
(802, 532),
(802, 631),
(802, 1009),
(811, 457),
(811, 460),
(811, 461),
(811, 462),
(811, 465),
(811, 466),
(811, 467),
(811, 474),
(811, 496),
(811, 509),
(811, 513),
(811, 609),
(811, 739),
(811, 1009),
(811, 1021),
(812, 457),
(812, 460),
(812, 461),
(812, 462),
(812, 465),
(812, 466),
(812, 467),
(812, 472),
(812, 474),
(812, 501),
(812, 509),
(812, 513),
(812, 631),
(812, 1010),
(812, 1021),
(826, 454),
(826, 457),
(826, 461),
(826, 462),
(826, 465),
(826, 466),
(826, 467),
(826, 474),
(826, 501),
(826, 509),
(826, 513),
(826, 534),
(826, 999),
(826, 1000);        
INSERT INTO FT.MAP(ROWID, WORDID) VALUES
(826, 1017),
(826, 1018),
(826, 1023),
(837, 454),
(837, 457),
(837, 461),
(837, 462),
(837, 465),
(837, 466),
(837, 467),
(837, 495),
(837, 509),
(837, 513),
(837, 534),
(837, 601),
(837, 692),
(837, 1004),
(837, 1018),
(837, 1020),
(838, 454),
(838, 457),
(838, 461),
(838, 462),
(838, 465),
(838, 466),
(838, 467),
(838, 468),
(838, 481),
(838, 495),
(838, 505),
(838, 513),
(838, 517),
(838, 534),
(838, 631),
(838, 852),
(838, 1020),
(838, 1024);   
CREATE CACHED TABLE FT.IGNORELIST(
    LIST VARCHAR
);         
-- 0 +/- SELECT COUNT(*) FROM FT.IGNORELIST;   
CREATE CACHED TABLE FT.SETTINGS(
    KEY VARCHAR NOT NULL,
    VALUE VARCHAR
);
ALTER TABLE FT.SETTINGS ADD CONSTRAINT FT.CONSTRAINT_8 PRIMARY KEY(KEY);       
-- 0 +/- SELECT COUNT(*) FROM FT.SETTINGS;     
CREATE CACHED TABLE PUBLIC.LIBELLE(
    ID BIGINT NOT NULL,
    LIBELLE VARCHAR(255) NOT NULL,
    ID_COMPTE INTEGER
);        
ALTER TABLE PUBLIC.LIBELLE ADD CONSTRAINT PUBLIC.CONSTRAINT_3 PRIMARY KEY(ID); 
-- 151 +/- SELECT COUNT(*) FROM PUBLIC.LIBELLE;
INSERT INTO PUBLIC.LIBELLE(ID, LIBELLE, ID_COMPTE) VALUES
(1, '', 1),
(2, STRINGDECODE('Frais relev\u00e9 de compte'), 1),
(3, 'Commision caution', 1),
(4, 'DKV', 1),
(5, 'LAVIGNE', 1),
(6, 'BFM MATERIEL', 1),
(7, STRINGDECODE('Int\u00e9r\u00eats/frais'), 1),
(8, 'France TELECOM', 1),
(9, 'GAEC GALLOIRES', 1),
(10, 'ADS', 1),
(11, 'TECHNIPLANS', 1),
(12, 'AREST', 1),
(13, STRINGDECODE('R\u00e8glement BAUMARD Michel'), 1),
(14, STRINGDECODE('R\u00e8glement'), 1),
(15, STRINGDECODE('R\u00e8glement BARBE'), 1),
(16, STRINGDECODE('Pr\u00eat rachat de cptes courant d''associ\u00e9s B9'), 1),
(17, STRINGDECODE('Pr\u00eat'), 1),
(18, STRINGDECODE('Pr\u00eat agrandissement bureaux + vestiaires'), 1),
(19, 'SFR', 1),
(20, 'ELIS', 1),
(21, STRINGDECODE('R\u00e8glement ALVES GOMES'), 1),
(22, STRINGDECODE('R\u00e8glement BRANCHEREAU'), 1),
(23, 'Restaurant ST HERBLON', 1),
(24, 'Carburant Michel', 1),
(25, 'Restaurant', 1),
(26, 'Restaurant ST JULIEN', 1),
(27, STRINGDECODE('R\u00e8glement Eiffage - Prise eau Ancenis'), 1),
(28, 'BOULANGERIE HUTEAU', 1),
(29, 'PROXI', 1),
(30, 'Restaurant PETIT MARS', 1),
(31, 'LA POSTE - Timbres', 1),
(32, 'Facture SGT frais bancaires', 1),
(33, 'ARTOP', 1),
(34, 'ADITEC', 1),
(35, 'VEOLIA EAU SARL', 1),
(36, STRINGDECODE('R\u00e8glement ODALIS'), 1),
(37, STRINGDECODE('R\u00e8glement VERBE Jean-Louis'), 1),
(38, STRINGDECODE('R\u00e8glement TOM'), 1),
(39, STRINGDECODE('R\u00e8glement TOUBLANC Yoan'), 1),
(40, STRINGDECODE('R\u00e8glement POILANE Vincent'), 1),
(41, STRINGDECODE('R\u00e8glement BOUYER Maryvonne'), 1),
(42, 'THAUVIN', 1),
(43, 'RIPOCHE', 1),
(44, 'BUREAU SUD LOIRE', 1),
(45, 'TECHNILAB', 1),
(46, 'Restaurant NANTES', 1),
(47, 'ENDUIT 44', 1),
(48, 'CHOLET AGGLOS', 1),
(49, 'ROM AGRI', 1),
(50, 'CLINIQUE DU PNEU', 1),
(51, 'ECRIVAIN PUBLIC', 1),
(52, 'BLUCHER', 1),
(53, 'URSSAF', 1),
(54, STRINGDECODE('R\u00e8glement BAR ANETZ'), 1),
(55, STRINGDECODE('R\u00e8glement FARDEAU TERRIEN'), 1),
(56, STRINGDECODE('R\u00e8glement BOURREAU Didier'), 1),
(57, STRINGDECODE('R\u00e8glement VEOLIA'), 1),
(58, STRINGDECODE('R\u00e8glement LANDAIS'), 1),
(59, 'SOME', 1),
(60, 'SMABTP - 1e trimestre 2013', 1),
(61, 'LA POSTE - Colis', 1),
(62, 'Restaurant ANCENIS', 1),
(63, STRINGDECODE('Apport compte ch\u00e8que LA POSTE'), 1),
(64, 'LEBRETON', 1),
(65, STRINGDECODE('R\u00e8glement ASTROLABE'), 1),
(66, 'HUMANIS 4e trimestre 2012', 1),
(67, 'SMIEC 1e trimestre 2013', 1),
(68, 'LIBERT COFIROUTE', 1),
(69, 'Restaurant ??? CLISSON VINCENT', 1),
(70, 'Parts CIO', 1),
(71, 'COUDRAIS', 1),
(72, STRINGDECODE('R\u00e8glement CHAMPEAU'), 1),
(73, STRINGDECODE('TVA d\u00e9cembre 2012'), 1),
(74, 'MONNIER', 1),
(75, 'LOIRE MATERIAUX', 1),
(76, 'HERVE LOIRE BETON', 1),
(77, 'GENERALI LEADER suppl retraite', 1),
(78, 'AGRI SUD LOIRE', 1),
(79, 'MISMO', 1),
(80, 'AFPA', 1),
(81, 'BALLUT TP CLOS RONSARD', 1),
(82, 'LEHEE JAN', 1),
(83, 'Restaurant ST JULIEN DE CONCELLES', 1),
(84, 'Restaurant JEROME', 1),
(85, 'LEDUC', 1),
(86, STRINGDECODE('R\u00e8glement MAIRIE DRAIN'), 1),
(87, 'VM DEC -1%', 1),
(88, 'GRAFIBURO', 1),
(89, 'Virement MENESES - Acompte grue HD21', 1),
(90, 'DKV', 1),
(91, STRINGDECODE('R\u00e8glement TERRENA'), 1),
(92, 'ADS', 1),
(93, 'SAB', 1),
(94, 'GRIFF PRINT', 1),
(95, 'HILTI', 1),
(96, 'LAFARGE GRANULATS', 1),
(97, STRINGDECODE('R\u00e8glement CIS - Patis France'), 1),
(98, STRINGDECODE('PRO BTP ann\u00e9e 2012'), 1),
(99, 'Commission caution', 1),
(100, STRINGDECODE('R\u00e8glement LAITA'), 1),
(101, STRINGDECODE('R\u00e8glement SCI BMO'), 1),
(102, STRINGDECODE('R\u00e8glement ALLIORA'), 1),
(103, STRINGDECODE('R\u00e8glement ADS'), 1),
(104, 'AMTEC AUDIT', 1),
(105, 'LEDUC SAH', 1),
(106, 'DRFIP - Etat solde', 1),
(107, 'France TELECOM', 1),
(108, 'ELIS', 1),
(109, 'AGH CLOS RONSARD', 1),
(110, 'CARTE GRISE MASCOTT AD 822QT', 1),
(111, 'SFAC DECLARATION DEC 2012', 1),
(112, STRINGDECODE('Restaurant NANTES J\u00e9r\u00f4me'), 1),
(113, 'BLANLOEIL', 1),
(114, 'CAILLER', 1),
(115, 'DUPONT', 1),
(116, 'GARAGE DE LA GARE', 1),
(117, 'INERTA', 1),
(118, 'LAVIGNE', 1),
(119, 'LOIRE CREATION PAYSAGE', 1); 
INSERT INTO PUBLIC.LIBELLE(ID, LIBELLE, ID_COMPTE) VALUES
(120, 'PHELIPPEAU', 1),
(121, 'RABJEAU PIECES AUTOS', 1),
(122, 'SMBC', 1),
(123, 'SODEMAT', 1),
(124, 'GARAGE TERRIEN', 1),
(125, 'Restaurant ANCENIS RABJEAU', 1),
(126, 'HELIO GRAPHIC', 1),
(127, STRINGDECODE('Pr\u00eat rachat de cptes courant associ\u00e9s B9'), 1),
(128, 'PRET AGRANDISSEMENT BUREAUX + VESTIAIRES', 1),
(129, 'PROMAN', 1),
(130, 'ACTI ENERGIE', 1),
(131, 'SFR', 1),
(132, STRINGDECODE('Pr\u00eat camion + 2 mini-pelles'), 1),
(133, 'CHARIER CM', 1),
(134, 'LAFARGE BETONS', 1),
(135, 'UNIBETON', 1),
(136, 'FOBI', 1),
(137, 'COUSSEAU AUGUSTE', 1),
(138, 'COUTAUD', 1),
(139, 'SODEM', 1),
(140, STRINGDECODE('R\u00e8glement B9 - Honoraires'), 1),
(141, 'B4 LOYER', 1),
(142, STRINGDECODE('Pr\u00eat achat b\u00e2timent'), 1),
(143, 'FRANS BONHOMME', 1),
(144, 'LEBERT', 1),
(145, STRINGDECODE('LOCAM - Acc\u00e8s internet Novaltos'), 1),
(146, STRINGDECODE('LOCAM - Acc\u00e8s Novalto business'), 1),
(147, 'Fs', 1),
(148, STRINGDECODE('05 f\u00e9vrier 2013'), 1),
(149, 'Truc', 1),
(150, 'FOBITEC', 1),
(151, 'Ghj', 4);     
ALTER TABLE FT.ROWS ADD CONSTRAINT FT.CONSTRAINT_26 UNIQUE(HASH, INDEXID, KEY);
ALTER TABLE FT.WORDS ADD CONSTRAINT FT.CONSTRAINT_4E UNIQUE(NAME);             
ALTER TABLE FT.INDEXES ADD CONSTRAINT FT.CONSTRAINT_9E UNIQUE(SCHEMA, TABLE);  
ALTER TABLE PUBLIC.ENREGISTREMENT ADD CONSTRAINT PUBLIC.CONSTRAINT_C6 FOREIGN KEY(ID_LIBELLE) REFERENCES PUBLIC.LIBELLE(ID) NOCHECK;           
ALTER TABLE PUBLIC.ENREGISTREMENT ADD CONSTRAINT PUBLIC."fk_enregistrement_compta" FOREIGN KEY(ID_COMPTE) REFERENCES PUBLIC.COMPTA(ID) NOCHECK;
CREATE FORCE TRIGGER PUBLIC.FT_MODEREGLEMENT AFTER INSERT, UPDATE, DELETE, ROLLBACK ON PUBLIC.MODEREGLEMENT FOR EACH ROW QUEUE 1024 CALL "org.h2.fulltext.FullText$FullTextTrigger";           
CREATE FORCE TRIGGER PUBLIC.FT_LIBELLE AFTER INSERT, UPDATE, DELETE, ROLLBACK ON PUBLIC.LIBELLE FOR EACH ROW QUEUE 1024 CALL "org.h2.fulltext.FullText$FullTextTrigger";       
CREATE FORCE TRIGGER PUBLIC.FT_MOTIF AFTER INSERT, UPDATE, DELETE, ROLLBACK ON PUBLIC.MOTIF FOR EACH ROW QUEUE 1024 CALL "org.h2.fulltext.FullText$FullTextTrigger";           
CREATE FORCE TRIGGER PUBLIC.FT_ENREGISTREMENT AFTER INSERT, UPDATE, DELETE, ROLLBACK ON PUBLIC.ENREGISTREMENT FOR EACH ROW QUEUE 1024 CALL "org.h2.fulltext.FullText$FullTextTrigger";         
CREATE FORCE TRIGGER PUBLIC.FT_ETAT AFTER INSERT, UPDATE, DELETE, ROLLBACK ON PUBLIC.ETAT FOR EACH ROW QUEUE 1024 CALL "org.h2.fulltext.FullText$FullTextTrigger";             
